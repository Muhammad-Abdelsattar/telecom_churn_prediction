stages:
  prepare:
    cmd: python -m steps.prepare_data
    deps:
    - steps/prepare_data.py
    - churn_prediction/data.py
    - input/train.csv
    - input/test.csv
    outs:
    - input\prepared_train.csv
    - input\prepared_test.csv

  train:
    cmd: python -m steps.train
    deps:
    - steps/train.py
    - churn_prediction/modeling.py
    - churn_prediction/training.py
    - input/prepared_train.csv
    - input/train.csv
    params:
    - pipeline.model.use_model
    - pipeline.model.params
    outs:
    - models/pipeline.pkl
    - reports/metrics/validation.yaml:
        cache: false

    # evaluate:
    #     cmd: python -m steps.evaluate
    #     deps:
    #     - steps/evaluate.py
    #     - churn_prediction/evaluation.py
    #     - input/prepared_test.csv
    #     - input/test.csv
    #     - models/pipeline.pkl
    #     params:
    #     outs:
    #     - reports/metrics.yaml:
    #         cache: false 

  evaluate:
    cmd: python -m steps.evaluate
    deps:
    - churn_prediction/evaluation.py
    - input/prepared_test.csv
    - input/test.csv
    - models/pipeline.pkl
    - steps/evaluate.py
    outs:
    - reports/metrics/test.yaml:
        cache: false
metrics:
- reports/metrics
